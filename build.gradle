apply plugin: 'groovy'
apply plugin: 'fatjar'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'
apply plugin: 'project-report'
apply plugin: 'idea'

description = "Chat channel server"
version = 0.1

// The main class of the application
mainClassName = 'com.example.helloworld.HelloWorldApplication'

// Use Java 7 by default
sourceCompatibility = 1.7
targetCompatibility = 1.7

// Add Gradle FatJar Plugin, see https://github.com/musketyr/gradle-fatjar-plugin
// and shadow plugin
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.2-rc1'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.0.2'
    }
}

// Set our project variables
project.ext {
    dropwizardVersion = '0.7.1'
    dropWizardConfig = './src/dist/config/example.yml'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile group: 'io.dropwizard', name: 'dropwizard-assets', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-core', version: dropwizardVersion
//    compile group: 'io.dropwizard', name: 'dropwizard-hibernate', version: dropwizardVersion
//    compile group: 'io.dropwizard', name: 'dropwizard-migrations', version: dropwizardVersion
//    compile group: 'io.dropwizard', name: 'dropwizard-auth', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-metrics', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-views-freemarker', version: dropwizardVersion
    compile group: 'io.dropwizard', name: 'dropwizard-views-mustache', version: dropwizardVersion
//    compile group: 'io.dropwizard', name: 'dropwizard-spdy', version: dropwizardVersion
//    compile group: 'com.h2database', name: 'h2', version: '1.3.171'
    // this dependency is needed due to http://issues.gradle.org/browse/GRADLE-2647
    compile "com.sun.jersey:jersey-client:1.18.1"
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.3.3'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    testCompile group: 'org.easytesting', name: 'fest-assert-core', version: '2.0M10'
}

// configure distZip inclusions
applicationDistribution.from("$projectDir") {
//     into 'sounds'
     include 'sounds'
     include 'sounds/*.*'
}

// Configure the fatJar task
// TODO when jcenter access is allowed, rename to jar and use shadowJar task
fatJar {
    classifier 'fat'

    // We need to add the main class to the manifest, otherwise the JAR won't start.
    manifest {
        attributes 'Main-Class': mainClassName
        attributes 'Built-Date': new Date() //now
        attributes 'Built-By': System.getProperty('user.name')
        attributes 'Build-Jdk': System.getProperty('java.version')
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Version': project.version
        attributes 'Implementation-Vendor-Id': project.group
    }

    // We have to exclude signature files from the fat JAR, otherwise we'll get invalid signature file digest errors.
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
}

// Configure the jar and shadowJar tasks
jar {
    // We need to add the main class to the manifest, otherwise the JAR won't start.
    manifest {
        attributes 'Main-Class': mainClassName
        attributes 'Built-Date': new Date() //now
        attributes 'Built-By': System.getProperty('user.name')
        attributes 'Build-Jdk': System.getProperty('java.version')
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Version': project.version
        attributes 'Implementation-Vendor-Id': project.group
    }

    // We have to exclude signature files from the fat JAR, otherwise we'll get invalid signature file digest errors.
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
}

// Configure the run task to start the Dropwizard service

run {
    args 'server', dropWizardConfig
}

task stage(dependsOn: ['clean', 'fatJar', 'shadowJar'])